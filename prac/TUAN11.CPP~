
#include<iostream>
using namespace std;
//Trong đó width và height lần lượt là chiều rộng và chiều cao bức ảnh, 
//pixels là mảng chứa width∗height giá trị, pixels[i∗width+j] thể hiện giá trị điểm ảnh hàng i cột j

struct Image{
    int *pixels;
    int width;
    int height;

};
    void printImage(const Image& img){
        for(int i = 0;i<img.height;i++){
            for(int j = 0;j<img.width;j++){
                cout<<img.pixels[i*(img.width)+j]<<" ";
            }
            cout<<endl;
        }
    }
    Image halve(const Image& img){
        Image img_;
        img_.width = (img.width/2)+1;
        img_.height = (img.height/2)+1;
        img_.pixels = new int[img_.width*img_.height];
        int i_ = 0;
        for(int i=0;i<img.height;i++){
            if(i % 2 == 0){
            for(int j=0;j<img.width;j++){
                if(j % 2 == 0)
                {  
                    img_.pixels[i_] = img.pixels[i*img.width+j];
                    i_++;
                }
            }
            }
        }
        return img_;
    }

//* bai 3
void swap(int *a, int *b)
{
    int tmp = *a;
    *a = *b;
    *b = tmp;
}

int* partition (int *start, int *end)
{
    int pivot = *start;  
 
    int *p = start -1;

    for (int *q = start; q < end; q++)
    {
        if (*q <= pivot)
        {
            swap(p, q);
            p++;
        }
    }
    swap(p+1, end);
    return (p + 1);
}

void quickSort(*start, *end)
{
    if (start < end)
    {
        int *p = partition(*start, *end);

        quickSort(start, p-1);
        quickSort(p+1, end);
    }
}
int main(){
int pixels[] = {
    1, 3, 0, 5, 2,
    4, 1, 8, 3, 1,
    3, 3, 1, 3, 2
};
Image img = {pixels, 5, 3};

printImage(img);
printImage(halve(img));
}